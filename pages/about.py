import streamlit as st
import time

st.set_page_config(
    page_title="Drug Discovery: About",
    page_icon="üîé",
    layout="wide"
)

st.write("""
    <div style="display: flex; justify-content: center;">
        <img src="https://i.imgur.com/zhlv3Bw.jpeg" alt="Centered Image">
    </div>
""", unsafe_allow_html=True)
new_title = '<p style="text-align: center;font-family:Segoe UI Black; color:#6D59B9; font-size: 80px;">About</p>'
st.markdown(new_title, unsafe_allow_html=True)

st.sidebar.page_link("main.py", label="üè† Home")
st.sidebar.page_link("pages/input_main.py", label="üî† Manual Input")
st.sidebar.page_link("pages/compare.py", label="üÜö Compare")
st.sidebar.page_link("pages/about.py", label="üîé About")

parameters_description = """
**AlogP (Octanol-Water Partition Coefficient)**: AlogP represents the logarithm of the partition coefficient between n-octanol and water. It indicates the lipophilicity of the molecule, which is crucial for its oral bioavailability. Generally, drugs with moderate lipophilicity (AlogP around 2-4) are preferred for oral administration as they can efficiently traverse biological membranes.

**Ligand Efficiency BEI (Binding Efficiency Index)**: BEI represents the binding efficiency of a molecule, which is calculated by dividing the binding affinity (typically measured as binding constant or IC50) by the number of heavy atoms in the molecule. Ligand efficiency BEI is a measure of how efficiently a molecule binds to its target per heavy atom. This parameter helps in assessing the potency of a molecule relative to its size.

**Ligand Efficiency LE (Ligand Efficiency)**: LE is calculated by dividing the binding affinity by the molecular weight of the molecule. It provides a measure of the binding efficiency relative to the size of the molecule. Ligand efficiency LE helps in comparing the potency of different compounds while considering their molecular weight.

**Ligand Efficiency LLE (Ligand Efficiency LLE)**: LLE is calculated by dividing the binding affinity by the lipophilicity (LogP or AlogP) of the molecule. It provides a measure of the binding efficiency relative to the lipophilicity of the molecule. Ligand efficiency LLE helps in assessing the balance between potency and lipophilicity, which is important for oral drug absorption and distribution.

**Ligand Efficiency SEI (Surface Efficiency Index)**: SEI is calculated by dividing the binding affinity by the polar surface area (PSA) of the molecule. It provides a measure of the binding efficiency relative to the polar surface area, which influences the molecule's solubility and membrane permeability. Ligand efficiency SEI helps in assessing the balance between potency and polar surface area, which is important for oral drug absorption.
"""

string_to_smiles = """
The chemical graph is first trimmed to remove hydrogen atoms and cycles are broken to turn it into a spanning tree. Where cycles have been broken, numeric suffix labels are included to indicate the connected nodes. Parentheses are used to indicate points of branching on the tree.

The resultant SMILES form depends on the choices:
    -of the bonds chosen to break cycles,
    -of the starting atom used for the depth-first traversal, and
    -of the order in which branches are listed when encountered.

"""

fingerprints = """
Fingerprints are tokenizer for SMILES data, they help in converting the string data into numeric format. The different fingerprints are:

**Circular Fingerprint**: A circular fingerprint is generated by exhaustively enumerating all circular fragments grown radially from each heavy atom of the molecule up to the given radius and then hashing these fragments into a fixed-length bitvector.
or  They are generated by exhaustively enumerating "circular" fragments (containing all atoms within a given radius from each heavy atom of the molecule) and then hashing these fragments into a fixed-length bitstring. (Here, the "radius" from an atom is measured by the number of bonds that separates two atoms).

**MACCS Fingerprint**: The MACCS key is a binary fingerprint (a string of 0's and 1's). Each bit position represents the presence (=1) or absence (=0) of a pre-defined structural feature. 

**RDKit Fingerprint**: RDKit fingerprints are a substructure fingerprint used to assess molecular similarity.
"""



def stream_data(test):
    for word in test.split(' '):
        yield word + " "
        time.sleep(0.09)

with st.expander("What is SMILES data?"):
    st.write("SMILES (Simplified Molecular Input Line Entry System) is a chemical notation that allows a user to represent a chemical structure in a way that can be used by the computer. SMILES is an easily learned and flexible notation.")

with st.expander("What is IUPAC Name?"):
    st.write("In chemical nomenclature, the IUPAC nomenclature of organic chemistry is a method of naming organic chemical compounds as recommended by the International Union of Pure and Applied Chemistry (IUPAC).")

with st.expander("How is chemical molecule converted to SMILES?"):
    st.write(string_to_smiles)
    st.image("https://i.imgur.com/wEebXtX.png")
    # st.write("""
    #             <div style="display: flex; justify-content: center;">
    #                 <img src="https://i.imgur.com/Jxl4f7J.png" alt="Centered Image">
    #             </div>
    #             """, unsafe_allow_html=True)

with st.expander("Why are we specifically predicting these values?"):
    st.write(parameters_description)

with st.expander("How is the final result calculated?"):
    st.write("The final results is calculated on basis of Lipinski's Rule of 5, which states that an oral drug should have lopP value less than 5 and should ideally be between **1.35-1.8** for proper oral and intestinal absorption. While ligand efficiency values may not directly facilitate prediction, they offer insights that can guide laboratory work towards minimizing potential molecule candidates. Utilizing these values directly is challenging due to their variability across different chemical molecules.")
    url = "https://www.acdlabs.com/wp-content/uploads/download/app/physchem/making_sense.pdf"
    st.markdown("Source: [Lipinski's Rule of 5](%s)" % url)
    
with st.expander("What are different fingerprints and how do they work?"):
    st.write(fingerprints) 

with st.expander("What is the performance of different Machine Learning Models used?"):
    st.image("https://i.imgur.com/LRdOSCm.png")